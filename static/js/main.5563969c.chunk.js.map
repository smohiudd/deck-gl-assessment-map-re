{"version":3,"sources":["constants/default-settings.js","utils/data-utils.js","layer-utils/utils.js","hexagon-layer/enhanced-hexagon-layer.js","SelectionContainer.js","App.js","index.js"],"names":["SCALE_TYPES","keyMirror","ordinal","quantile","quantize","linear","sqrt","point","ALL_FIELD_TYPES","require","scaleLinear","scaleQuantize","scaleQuantile","scaleOrdinal","scaleSqrt","scalePoint","boolean","date","geojson","integer","real","string","timestamp","defaultFormat","_FILED_TYPE_DISPLAY","Object","defineProperty","label","color","d","CHANNEL_SCALES","_FIELD_DISPLAY_FORMAT","String","radius","size","colorAggr","sizeAggr","AGGREGATION_TYPES","linearFieldScaleFunctions","_linearFieldScaleFunc","linearFieldAggrScaleFunctions","_linearFieldAggrScale","_CHANNEL_SCALES$color","_CHANNEL_SCALES$sizeA","ordinalFieldScaleFunctions","_ordinalFieldScaleFun","ordinalFieldAggrScaleFunctions","_ordinalFieldAggrScal","_CHANNEL_SCALES$color2","notSupportedScaleOpts","_notSupportedScaleOpt","notSupportAggrOpts","_notSupportAggrOpts","FIELD_OPTS","_DEFAULT_AGGREGATION","type","scale","objectSpread","format","legend","RESOLUTIONS","keys","reduce","accu","key","filter","ft","length","arc","cluster","line","grid","icon","heatmap","hexagon","ONE_X","TWO_X","RATIOS","SCREEN","FOUR_BY_THREE","SIXTEEN_BY_NINE","EXPORT_DATA_TYPE","Math","log2","CSV","EXPORT_MAP_FORMAT","toLowerCase","HTML","JSON","entries","map","entry","id","available","info","error","warning","success","global","file","notNullorUndefined","undefined","getBinColorDomain","scaleType","bins","_ref","_ref2","slicedToArray","lowerIdx","upperIdx","value","slice","values","results","forEach","v","includes","push","unique","b","sort","getColorScaleFunction","layer","_layer$props2","props","colorScale","colorDomain","state","colorScaleFunc","getScaleFunctor","domain","colorValueDomain","range","colorRange","defaultProps","HexagonLayer","EnhancedHexagonLayer","dimensionUpdaters","get","getPrototypeOf","prototype","this","call","getFillColor","triggers","_layer$props","lowerPercentile","upperPercentile","sortedBins","sortedColorBins","len","ceil","floor","getColorScale","onSetColorDomain","getColorValueDomain","layerName","SelectionContainer","react_default","a","createElement","className","class","style","backgroundColor","href","MAPBOX_ACCESS_TOKEN","initialView","longitude","latitude","zoom","COLOR_RANGE","App","_this","classCallCheck","possibleConstructorReturn","_onWebGLInitialized","gl","setState","_onMapLoad","_map","deck","_deck","addLayer","MapboxLayer","_onViewStateChange","bind","assertThisInitialized","viewState","TileLayer","getTileData","x","y","z","mapSource","concat","fetch","then","response","arrayBuffer","buffer","features","vectorTileLayer","VectorTile","Protobuf","layers","i","feature","toGeoJSON","onTileError","e","console","maxZoom","renderSubLayers","opacity","pickable","extruded","coverage","colorAggregation","getColorWeight","properties","RE_ASSESSED_VALUE","getPosition","geometry","coordinates","_this2","deckgl","ref","_renderLayers","initialViewState","controller","onWebGLInitialized","onViewStateChange","esm","getMap","mapStyle","mapboxApiAccessToken","onLoad","src_SelectionContainer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5563969c.chunk.js","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport keyMirror from 'keymirror';\n\n\nexport const SCALE_TYPES = keyMirror({\n  ordinal: null,\n  quantile: null,\n  quantize: null,\n  linear: null,\n\n  // for radius\n  sqrt: null,\n  // ordinal domain to linear range\n  point: null\n});\n\nexport const SCALE_FUNC = {\n  linear: require('d3-scale').scaleLinear,\n  quantize: require('d3-scale').scaleQuantize,\n  quantile: require('d3-scale').scaleQuantile,\n  ordinal: require('d3-scale').scaleOrdinal,\n  sqrt: require('d3-scale').scaleSqrt,\n  point: require('d3-scale').scalePoint\n};\n\nexport const ALL_FIELD_TYPES = keyMirror({\n  boolean: null,\n  date: null,\n  geojson: null,\n  integer: null,\n  real: null,\n  string: null,\n  timestamp: null,\n  point: null\n});\n\nconst ORANGE = '248, 194, 28';\nconst PINK = '231, 189, 194';\nconst PURPLE = '160, 106, 206';\nconst BLUE = '140, 210, 205';\nconst BLUE2 = '106, 160, 206';\nconst BLUE3 = '0, 172, 237';\nconst GREEN = '106, 160, 56';\nconst RED = '237, 88, 106';\n\nexport const HIGHLIGH_COLOR_3D = [255, 255, 255, 60];\n\nexport const FIELD_COLORS = {\n  default: RED\n};\n\nexport const FILED_TYPE_DISPLAY = {\n  [ALL_FIELD_TYPES.boolean]: {\n    label: 'bool',\n    color: PINK\n  },\n  [ALL_FIELD_TYPES.date]: {\n    label: 'date',\n    color: PURPLE\n  },\n  [ALL_FIELD_TYPES.geojson]: {\n    label: 'geo',\n    color: BLUE2\n  },\n  [ALL_FIELD_TYPES.integer]: {\n    label: 'int',\n    color: ORANGE\n  },\n  [ALL_FIELD_TYPES.real]: {\n    label: 'float',\n    color: ORANGE\n  },\n  [ALL_FIELD_TYPES.string]: {\n    label: 'string',\n    color: BLUE\n  },\n  [ALL_FIELD_TYPES.timestamp]: {\n    label: 'time',\n    color: GREEN\n  },\n  // field pairs\n  [ALL_FIELD_TYPES.point]: {\n    label: 'point',\n    color: BLUE3\n  }\n};\n\nexport const defaultFormat = d => d;\n\nexport const FIELD_DISPLAY_FORMAT = {\n  [ALL_FIELD_TYPES.string]: defaultFormat,\n  [ALL_FIELD_TYPES.timestamp]: defaultFormat,\n  [ALL_FIELD_TYPES.integer]: defaultFormat,\n  [ALL_FIELD_TYPES.boolean]: d => String(d),\n  [ALL_FIELD_TYPES.date]: defaultFormat,\n  [ALL_FIELD_TYPES.geojson]: defaultFormat\n};\n\nexport const CHANNEL_SCALES = keyMirror({\n  color: null,\n  radius: null,\n  size: null,\n  colorAggr: null,\n  sizeAggr: null\n});\n\nexport const AGGREGATION_TYPES = {\n  // default\n  count: 'count',\n  // linear\n  average: 'average',\n  maximum: 'maximum',\n  minimum: 'minimum',\n  median: 'median',\n  sum: 'sum',\n  // ordinal\n  mode: 'mode',\n  countUnique: 'count unique'\n};\n\nexport const linearFieldScaleFunctions = {\n  [CHANNEL_SCALES.color]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n  [CHANNEL_SCALES.radius]: [SCALE_TYPES.sqrt],\n  [CHANNEL_SCALES.size]: [SCALE_TYPES.linear]\n};\n\nexport const linearFieldAggrScaleFunctions = {\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.average]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.maximum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.minimum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.median]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.sum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n\n  [CHANNEL_SCALES.sizeAggr]: {\n    [AGGREGATION_TYPES.average]: [SCALE_TYPES.linear],\n    [AGGREGATION_TYPES.maximum]: [SCALE_TYPES.linear],\n    [AGGREGATION_TYPES.minimum]: [SCALE_TYPES.linear],\n    [AGGREGATION_TYPES.median]: [SCALE_TYPES.linear],\n    [AGGREGATION_TYPES.sum]: [SCALE_TYPES.linear]\n  }\n};\n\nexport const ordinalFieldScaleFunctions = {\n  [CHANNEL_SCALES.color]: [SCALE_TYPES.ordinal],\n  [CHANNEL_SCALES.radius]: [SCALE_TYPES.point],\n  [CHANNEL_SCALES.size]: [SCALE_TYPES.point]\n};\n\nexport const ordinalFieldAggrScaleFunctions = {\n  // [CHANNEL_SCALES.colorAggr]: [SCALE_TYPES.ordinal, SCALE_TYPES.linear],\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.mode]: [SCALE_TYPES.ordinal],\n    [AGGREGATION_TYPES.countUnique]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n\n  // Currently doesn't support yet\n  [CHANNEL_SCALES.sizeAggr]: {}\n};\n\nexport const notSupportedScaleOpts = {\n  [CHANNEL_SCALES.color]: [],\n  [CHANNEL_SCALES.radius]: [],\n  [CHANNEL_SCALES.size]: []\n};\n\nexport const  notSupportAggrOpts = {\n  [CHANNEL_SCALES.colorAggr]: {},\n  [CHANNEL_SCALES.sizeAggr]: {}\n};\n\n/**\n * Default aggregation are based on ocunt\n */\nexport const DEFAULT_AGGREGATION = {\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.count]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n  [CHANNEL_SCALES.sizeAggr]: {\n    [AGGREGATION_TYPES.count]: [SCALE_TYPES.linear]\n  }\n};\n\n/**\n * Define what type of scale operation is allowed on each type of fields\n */\nexport const FIELD_OPTS = {\n  string: {\n    type: 'categorical',\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d\n    }\n  },\n  real: {\n    type: 'numerical',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...linearFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d\n    }\n  },\n  timestamp: {\n    type: 'time',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...notSupportAggrOpts\n    },\n    format: {\n      legend: d => d\n    }\n  },\n  integer: {\n    type: 'numerical',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...linearFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d\n    }\n  },\n  boolean: {\n    type: 'boolean',\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d\n    }\n  },\n  date: {\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d\n    }\n  },\n  geojson: {\n    type: 'geometry',\n    scale: {\n      ...notSupportedScaleOpts,\n      ...notSupportAggrOpts\n    },\n    format: {\n      legend: d => '...'\n    }\n  }\n};\n\nexport const CHANNEL_SCALE_SUPPORTED_FIELDS = Object.keys(\n  CHANNEL_SCALES\n).reduce(\n  (accu, key) => ({\n    ...accu,\n    [key]: Object.keys(FIELD_OPTS).filter(\n      ft => Object.keys(FIELD_OPTS[ft].scale[key]).length\n    )\n  }),\n  {}\n);\n\n// TODO: shan delete use of LAYER_TYPES\nexport const LAYER_TYPES = keyMirror({\n  point: null,\n  arc: null,\n  cluster: null,\n  line: null,\n  grid: null,\n  geojson: null,\n  icon: null,\n  heatmap: null,\n  hexagon: null\n});\n\nexport const DEFAULT_LAYER_COLOR = {\n  tripArc: '#9226C6',\n  begintrip_lat: '#1E96BE',\n  dropoff_lat: '#FF991F',\n  request_lat: '#52A353'\n};\n\n// let user pass in default tooltip fields\nexport const DEFAULT_TOOLTIP_FIELDS = [];\n\nexport const DEFAULT_LIGHT_SETTINGS = {\n  lightsPosition: [-122.45, 37.66, 8000, -122.0, 38.0, 8000],\n  ambientRatio: 0.4,\n  diffuseRatio: 0.6,\n  specularRatio: 0.3,\n  lightsStrength: [0.9, 0.0, 0.8, 0.0],\n  numberOfLights: 2\n};\n\nexport const NO_VALUE_COLOR = [0, 0, 0, 0];\n\nexport const LAYER_BLENDINGS = {\n  additive: {\n    blendFunc: ['SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: 'FUNC_ADD'\n  },\n  normal: {\n    // reference to\n    // https://limnu.com/webgl-blending-youre-probably-wrong/\n    blendFunc: [\n      'SRC_ALPHA',\n      'ONE_MINUS_SRC_ALPHA',\n      'ONE',\n      'ONE_MINUS_SRC_ALPHA'\n    ],\n    blendEquation: ['FUNC_ADD', 'FUNC_ADD']\n  },\n  subtractive: {\n    blendFunc: ['ONE', 'ONE_MINUS_DST_COLOR', 'SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: ['FUNC_SUBTRACT', 'FUNC_ADD']\n  }\n};\n\nexport const MAX_DEFAULT_TOOLTIPS = 5;\n\nexport const RESOLUTIONS = keyMirror({\n  ONE_X: null,\n  TWO_X: null\n});\n\nexport const RATIOS = keyMirror({\n  SCREEN: null,\n  FOUR_BY_THREE: null,\n  SIXTEEN_BY_NINE: null\n});\n\nexport const RATIO_OPTIONS = [{\n  id: RATIOS.SCREEN,\n  label: 'Original Screen',\n  getSize: (screenW, screenH) => ({width: screenW, height: screenH})\n}, {\n  id: RATIOS.FOUR_BY_THREE,\n  label: '4:3',\n  getSize: (screenW, screenH) => ({width: screenW, height: Math.round(screenW * 0.75)})\n}, {\n  id: RATIOS.SIXTEEN_BY_NINE,\n  label: '16:9',\n  getSize: (screenW, screenH) => ({width: screenW, height: Math.round(screenW * 0.5625)})\n}];\n\nexport const RESOLUTION_OPTIONS = [{\n  id: RESOLUTIONS.ONE_X,\n  label: '1x',\n  available: true,\n  scale: 1,\n  zoomOffset: Math.log2(1),\n  getSize: (screenW, screenH) => ({\n    width: screenW,\n    height: screenH\n  })\n}, {\n  id: RESOLUTIONS.TWO_X,\n  label: '2x',\n  available: true,\n  scale: 2,\n  zoomOffset: Math.log2(2),\n  getSize: (screenW, screenH) => ({\n    width: screenW * 2,\n    height: screenH * 2\n  })\n}];\n\nexport const DEFAULT_EXPORT_IMAGE_NAME = 'kepler-gl.png';\n\nexport const EXPORT_DATA_TYPE = keyMirror({\n  CSV: null\n  // SHAPEFILE: null,\n  // JSON: null,\n  // GEOJSON: null,\n  // TOPOJSON: null\n});\n\nexport const EXPORT_DATA_TYPE_OPTIONS = [\n  {\n    id: EXPORT_DATA_TYPE.CSV,\n    label: EXPORT_DATA_TYPE.CSV.toLowerCase(),\n    available: true\n  }\n  // {\n  //   id: EXPORT_DATA_TYPE.SHAPEFILE,\n  //   label: 'shapefile',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.JSON,\n  //   label: 'json',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.GEOJSON,\n  //   label: 'geojson',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.TOPOJSON,\n  //   label: 'topojson',\n  //   available: false\n  // }\n];\n\n// Export map types\nexport const EXPORT_MAP_FORMAT = keyMirror({\n  HTML: null,\n  JSON: null\n});\n\n// Export map options\nexport const EXPORT_MAP_FORMAT_OPTIONS = Object.entries(EXPORT_MAP_FORMAT)\n  .map(entry => ({\n    id: entry[0],\n    label: entry[1].toLowerCase(),\n    available: true\n  }));\n\nexport const DEFAULT_UUID_COUNT = 6;\n\nexport const DEFAULT_NOTIFICATION_MESSAGE = 'MESSAGE_NOT_PROVIDED';\n\nexport const DEFAULT_NOTIFICATION_TYPES = keyMirror({\n  info: null,\n  error: null,\n  warning: null,\n  success: null\n});\n\nexport const DEFAULT_NOTIFICATION_TOPICS = keyMirror({\n  global: null,\n  file: null\n});\n\nexport const TOKEN_MISUSE_WARNING = '* If you do not provide your own token, the map may fail to display at any time when we replace ours to avoid misuse. ';\nexport const DISCLAIMER = 'You can change the Mapbox token later using the following instructions: ';\nexport const MAP_CONFIG_DESCRIPTION = 'Map config will be included in the Json file. If you are using kepler.gl in your own app. You can copy this config and pass it to ';\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport moment from 'moment';\nimport assert from 'assert';\nimport {ALL_FIELD_TYPES} from '../constants/default-settings';\n\nconst MAX_LATITUDE = 90;\nconst MIN_LATITUDE = -90;\nconst MAX_LONGITUDE = 180;\nconst MIN_LONGITUDE = -180;\n\n/**\n * simple getting unique values of an array\n *\n * @param {array} values\n * @returns {array} unique values\n */\nexport function unique(values) {\n  const results = [];\n  values.forEach(v => {\n    if (!results.includes(v) && notNullorUndefined(v)) {\n      results.push(v);\n    }\n  });\n\n  return results;\n}\n\n/* eslint-disable max-statements */\n/**\n * return center of map from given points\n * @param {array} layers\n * @param {string} dataId\n * @returns {object} coordinates of map center, empty if not found\n */\nexport function findMapBounds(layers) {\n  // find bounds in formatted layerData\n  // take ALL layers into account when finding map bounds\n  const availableLayerBounds = layers.reduce((res, l) => {\n    if (l.meta && l.meta.bounds) {\n      res.push(l.meta.bounds);\n    }\n    return res;\n  }, [])\n  // return null if no layer is available\n  if (availableLayerBounds.length === 0) {\n    return null;\n  }\n  // merge bounds in each layer\n  const newBounds = availableLayerBounds.reduce((res, b) => {\n    return [\n      Math.min(res[0], b[0]),\n      Math.min(res[1], b[1]),\n      Math.max(res[2], b[2]),\n      Math.max(res[3], b[3])\n    ];\n  }, [MAX_LONGITUDE, MAX_LATITUDE, MIN_LONGITUDE, MIN_LATITUDE]);\n  return newBounds;\n}\n/* eslint-enable max-statements */\n\nexport function getLatLngBounds(points, idx, limit) {\n  const lats = points\n    .map(d => Array.isArray(d) && d[idx])\n    .filter(Number.isFinite)\n    .sort(numberSort);\n\n  if (!lats.length) {\n    return null;\n  }\n  // use 99 percentile to filter out outliers\n  // clamp to limit\n  return [\n    Math.max(lats[Math.floor(0.01 * (lats.length - 1))], limit[0]),\n    Math.min(lats[Math.ceil(0.99 * (lats.length - 1))], limit[1])\n  ];\n}\n\nexport function clamp([min, max], val) {\n  return val <= min ? min : val >= max ? max : val;\n};\n\nexport function getSampleData(data, sampleSize = 500) {\n  const sampleStep = Math.max(Math.floor(data.length / sampleSize), 1);\n  const output = [];\n  for (let i = 0; i < data.length; i += sampleStep) {\n    output.push(data[i]);\n  }\n\n  return output;\n}\n\nexport function maybeToDate(isTime, fieldIdx, format, d) {\n  if (isTime) {\n    if (notNullorUndefined(d[fieldIdx])) {\n      return typeof d[fieldIdx] === 'string'\n        ? moment.utc(d[fieldIdx], format).valueOf()\n        : format === 'x' ? d[fieldIdx] * 1000 : d[fieldIdx];\n    }\n\n    return null;\n  }\n\n  return d[fieldIdx];\n}\n\n/**\n * whether null or undefined\n * @returns {boolean} - yes or no\n */\nexport function notNullorUndefined(d) {\n  return d !== undefined && d !== null;\n}\n\nexport function isPlainObject(obj) {\n  return (\n    obj === Object(obj) && typeof obj !== 'function' && !Array.isArray(obj)\n  );\n}\n\nexport function numberSort(a, b) {\n  return a - b;\n}\n\nexport function getSortingFunction(fieldType) {\n  switch (fieldType) {\n    case ALL_FIELD_TYPES.real:\n    case ALL_FIELD_TYPES.integer:\n    case ALL_FIELD_TYPES.timestamp:\n      return numberSort;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * round number with exact number of decimals\n * return as a string\n * @param {number} num\n * @param {number} decimals\n * @returns {string} - a rounded number in string format\n */\nexport function preciseRound(num, decimals) {\n  const t = Math.pow(10, decimals);\n  return (\n    Math.round(\n      num * t +\n        (decimals > 0 ? 1 : 0) *\n          (Math.sign(num) * (10 / Math.pow(100, decimals)))\n    ) / t\n  ).toFixed(decimals);\n}\n\n/**\n * get number of decimals to round to for slider from step\n * @param {number} step\n * @returns {number} - number of decimal\n */\nexport function getRoundingDecimalFromStep(step) {\n  if (isNaN(step)) {\n    assert('step is not a number');\n    assert(step);\n  }\n\n  const splitZero = step.toString().split('.');\n  if (splitZero.length === 1) {\n    return 0;\n  }\n  return splitZero[1].length;\n}\n\n/**\n * round the value to step for the slider\n * @param {number} minValue\n * @param {number} step\n * @param {number} val\n * @returns {number} - rounded number\n */\nexport function roundValToStep(minValue, step, val) {\n  if (isNaN(step)) {\n    return val;\n  }\n\n  const decimal = getRoundingDecimalFromStep(step);\n  const steps = Math.floor((val - minValue) / step);\n  let remain = val - (steps * step + minValue);\n\n  // has to round because javascript turns 0.1 into 0.9999999999999987\n  remain = Number(preciseRound(remain, 8));\n\n  let closest;\n  if (remain === 0) {\n    closest = val;\n  } else if (remain < step / 2) {\n    closest = steps * step + minValue;\n  } else {\n    closest = (steps + 1) * step + minValue;\n  }\n\n  // precise round return a string rounded to the defined decimal\n  const rounded = preciseRound(closest, decimal);\n\n  return Number(rounded);\n}\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {scaleQuantize, scaleOrdinal, scaleQuantile, scaleSqrt} from 'd3-scale';\nimport {unique} from '../utils/data-utils';\n\nimport {SCALE_TYPES} from '../constants/default-settings';\n\n// Enable render color by customized color Scale\nexport function getBinColorDomain(scaleType, bins, [lowerIdx, upperIdx]) {\n  switch (scaleType) {\n    case SCALE_TYPES.quantize:\n      return [bins[lowerIdx].value, bins[upperIdx].value];\n\n    case SCALE_TYPES.quantile:\n      return bins.slice(lowerIdx, upperIdx + 1).map(d => d.value);\n    case SCALE_TYPES.ordinal:\n      return unique(bins.map(b => b.value)).sort();\n    default:\n      return [bins[lowerIdx].value, bins[upperIdx].value];\n  }\n}\n\nexport function getScaleFunctor(scaleType) {\n  switch (scaleType) {\n    case SCALE_TYPES.quantize:\n      return scaleQuantize;\n\n    case SCALE_TYPES.quantile:\n      return scaleQuantile;\n    case SCALE_TYPES.ordinal:\n      return scaleOrdinal;\n    default:\n      return scaleQuantile;\n  }\n}\n\nexport function getColorValueDomain(layer) {\n  const {lowerPercentile, upperPercentile, colorScale} = layer.props;\n  const {sortedBins} = layer.state.sortedColorBins;\n  const len = sortedBins.length;\n\n  if (!len) {\n    // err... what do we do\n    layer.state.colorValueDomain = null;\n  } else {\n    const lowerIdx = Math.ceil(lowerPercentile / 100 * (len - 1));\n    const upperIdx = Math.floor(upperPercentile / 100 * (len - 1));\n\n    // calculate valueDomain based on\n    layer.state.colorValueDomain = getBinColorDomain(colorScale, sortedBins, [\n      lowerIdx,\n      upperIdx\n    ]);\n    layer.getColorScale();\n  }\n\n  layer.props.onSetColorDomain(layer.state.colorValueDomain);\n}\n\nexport function getColorScaleFunction(layer) {\n  const {colorScale, colorDomain} = layer.props;\n  layer.state.colorScaleFunc = getScaleFunctor(colorScale)()\n    .domain(\n      colorDomain || layer.state.colorDomain || layer.state.colorValueDomain\n    )\n    .range(layer.props.colorRange);\n}\n\nexport function getRadiusScaleFunction(layer) {\n  const {viewport} = layer.context;\n  layer.state.radiusScaleFunc = scaleSqrt()\n    .domain(layer.state.radiusDomain)\n    .range(\n      layer.props.radiusRange.map(\n        d => d * viewport.distanceScales.metersPerPixel[0]\n      )\n    );\n}\n\nexport function needsRecalculateColorDomain(oldProps, props) {\n  return (\n    oldProps.lowerPercentile !== props.lowerPercentile ||\n    oldProps.upperPercentile !== props.upperPercentile ||\n    oldProps.colorScale !== props.colorScale\n  );\n}\n\nexport function needReCalculateScaleFunction(oldProps, props) {\n  return oldProps.colorRange !== props.colorRange;\n}\n\nexport function needsRecalculateRadiusRange(oldProps, props) {\n  return (\n    oldProps.radiusRange !== props.radiusRange &&\n    (oldProps.radiusRange[0] !== props.radiusRange[0] ||\n      oldProps.radiusRange[1] !== props.radiusRange[1])\n  );\n}\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {HexagonLayer} from '@deck.gl/aggregation-layers'\n\nimport {getColorValueDomain, getColorScaleFunction} from '../layer-utils/utils';\n\nconst defaultProps = {\n  ...HexagonLayer.defaultProps,\n  colorScale: 'quantile'\n};\n\nexport default class EnhancedHexagonLayer extends HexagonLayer {\n  getDimensionUpdaters() {\n    const dimensionUpdaters = super.getDimensionUpdaters();\n    // add colorScale to dimension updates\n    dimensionUpdaters.getFillColor[1].triggers.push('colorScale');\n    return dimensionUpdaters;\n  }\n\n  /*\n   * override default layer method to calculate color domain\n   * and scale function base on color scale type\n   */\n  getColorValueDomain() {\n    getColorValueDomain(this);\n  }\n\n  getColorScale() {\n    getColorScaleFunction(this);\n  }\n}\n\nEnhancedHexagonLayer.layerName = 'EnhancedHexagonLayer';\nEnhancedHexagonLayer.defaultProps = defaultProps;\n","import React from \"react\"\n\nfunction SelectionContainer(props) {\n  return (\n    <div>\n      <div className='absolute top left w300 h180 py12 px12 ml36 mt36 bg-white round-bold prose'>\n        <h4>City of Calgary <span class='txt-underline'>Residential Property Assessment</span></h4>\n        <div className='w240 mt12 txt-s px6 py6 round shadow-darken10'>\n          <div className='grid mb6'>\n            <div className='col h12' style={{backgroundColor: \"#440154\"}}></div>\n            <div className='col h12' style={{backgroundColor: \"#414487\"}}></div>\n            <div className='col h12' style={{backgroundColor: \"#2a788e\"}}></div>\n            <div className='col h12' style={{backgroundColor: \"#22a884\"}}></div>\n            <div className='col h12' style={{backgroundColor: \"#7ad151\"}}></div>\n            <div className='col h12' style={{backgroundColor: \"#fde725\"}}></div>\n          </div>\n          <div className='grid txt-s'>\n            <div className='col flex-child--grow'>Low Assessment Value</div>\n            <div className='col flex-child--grow align-r'>High Assessment Value</div>\n          </div>\n        </div>\n        <div class=\"txt-s mt12\"><a href=\"https://saadiqm.com/deck-gl-assessment-map-nr/\">Link</a> to Non-Residental Property assessment map</div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SelectionContainer\n","import React from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {MapboxLayer} from \"@deck.gl/mapbox\";\nimport {StaticMap} from 'react-map-gl';\nimport {TileLayer} from '@deck.gl/geo-layers';\nimport {VectorTile} from '@mapbox/vector-tile';\nimport Protobuf from 'pbf';\nimport EnhancedHexagonLayer from './hexagon-layer/enhanced-hexagon-layer';\n\nimport SelectionContainer from \"./SelectionContainer\"\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1Ijoic2FhZGlxbSIsImEiOiJjamJpMXcxa3AyMG9zMzNyNmdxNDlneGRvIn0.wjlI8r1S_-xxtq2d-W5qPA';\n\n\nconst initialView = {\n  longitude: -114.062019,\n  latitude: 51.044270,\n  zoom:10.5,\n};\n\nconst COLOR_RANGE = [[68, 1, 84],\n [65, 68, 135],\n [42, 120, 142],\n [34, 168, 132],\n [122, 209, 81],\n [253, 231, 37]]\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoom:initialView.zoom,\n    };\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n  }\n\n  _onWebGLInitialized = (gl) => {\n    this.setState({gl});\n  }\n\n  _onMapLoad = () => {\n    const map = this._map;\n    const deck = this._deck;\n\n    let name = \"assessment-RE\"\n    map.addLayer(new MapboxLayer({id: name, deck}),'waterway-label');\n  }\n\n  _onViewStateChange({viewState}) {\n    this.setState({zoom:viewState.zoom});\n  }\n\n  _renderLayers() {\n\n    const hex_layer =  new TileLayer({\n      id: \"assessment-RE\",\n      type: TileLayer,\n      getTileData: ({x, y, z}) => {\n        const mapSource = `https://a.tiles.mapbox.com/v4/saadiqm.crsurd8i/${z}/${x}/${y}.vector.pbf?access_token=${MAPBOX_ACCESS_TOKEN}`;\n        return fetch(mapSource)\n          .then(response => response.arrayBuffer())\n          .then(buffer => {\n            const tile = new VectorTile(new Protobuf(buffer));\n\n            const features = [];\n            let vectorTileLayer = tile.layers[\"RE\"]\n\n            for (let i = 0; i < vectorTileLayer.length; i++) {\n              const vectorTileFeature = vectorTileLayer.feature(i);\n              const feature = vectorTileFeature.toGeoJSON(x, y, z);\n              features.push(feature);\n            }\n            return features;\n          });\n      },\n      onTileError:(e) => console.error(e),\n      maxZoom:9,\n      renderSubLayers: props => {\n\n        function getWeight(point) {\n          return point.properties.RE_ASSESSED_VALUE;\n        }\n        return new EnhancedHexagonLayer(props,{\n          opacity:0.9,\n          pickable: false,\n          extruded: false,\n          radius:80,\n          coverage:0.8,\n          colorAggregation:\"MEAN\",\n          getColorWeight: getWeight,\n          colorRange:COLOR_RANGE,\n          colorScale:\"quantile\",\n          getPosition: d => d.geometry.coordinates,\n          });\n        }\n      })\n\n    return [hex_layer]\n  }\n\n\n  render() {\n\n    const {gl} = this.state;\n\n    return (\n      <div>\n      <DeckGL\n        ref={ref => {\n          this._deck = ref && ref.deck;\n        }}\n        layers={this._renderLayers()}\n        initialViewState={initialView}\n        controller={true}\n        onWebGLInitialized={this._onWebGLInitialized}\n        onViewStateChange={this._onViewStateChange}\n\n      >\n      {gl && (\n        <StaticMap\n          ref={ref => {\n            this._map = ref && ref.getMap();\n          }}\n          gl={gl}\n          mapStyle=\"mapbox://styles/saadiqm/cjxbd493m05cc1cl29jntlb1w?optimize=true\"\n          mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n          onLoad={this._onMapLoad}\n        />\n      )}\n      </DeckGL>\n        <SelectionContainer/>\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}